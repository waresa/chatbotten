{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waris\\\\Desktop\\\\projects\\\\gptboss\\\\client\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport '../normal.css';\nimport { useState } from 'react';\nimport Hamburger from 'hamburger-react';\nimport SideMenu from '../components/SideMenu';\nimport ChatBox from '../components/ChatBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [ansatt, setAnsatt] = useState(\"\");\n  const [generator, setGenerator] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  function clearChat() {\n    setChatLog([]);\n  }\n\n  // function showNavbar that turns the display of the sidemenu on and off\n  function showNavbar() {\n    const sidemenu = document.querySelector('.sidemenu');\n    if (sidemenu.style.display === 'none' || sidemenu.style.display === '') {\n      sidemenu.style.display = 'block';\n    } else {\n      sidemenu.style.display = 'none';\n    }\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }];\n    setInput('');\n    setChatLog(chatLogNew);\n    setIsLoading(true);\n    const messages = chatLogNew.map(message => message.message);\n    const response = await fetch('http://localhost:3080', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: messages,\n        ansatt: `${ansatt}`,\n        generator: `${generator}`\n      })\n    });\n    const data = await response.json();\n    await setChatLog([...chatLogNew, {\n      user: 'gpt',\n      message: data.message\n    }]);\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n      ansatt: ansatt,\n      setAnsatt: setAnsatt,\n      generator: generator,\n      setGenerator: setGenerator,\n      clearChat: clearChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chatLog: chatLog,\n      isLoading: isLoading,\n      handleSubmit: handleSubmit,\n      input: input,\n      setInput: setInput,\n      ansatt: ansatt,\n      generator: generator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"xzjxwcLOaE9I3oLEpilL2awzfMI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","Hamburger","SideMenu","ChatBox","Chat","input","setInput","chatLog","setChatLog","ansatt","setAnsatt","generator","setGenerator","isLoading","setIsLoading","clearChat","showNavbar","sidemenu","document","querySelector","style","display","handleSubmit","e","preventDefault","chatLogNew","user","message","messages","map","response","fetch","method","headers","body","JSON","stringify","data","json"],"sources":["C:/Users/waris/Desktop/projects/gptboss/client/src/pages/Chat.jsx"],"sourcesContent":["\r\nimport '../App.css';\r\nimport '../normal.css';\r\nimport { useState }  from 'react';\r\nimport Hamburger from 'hamburger-react';\r\nimport SideMenu from '../components/SideMenu';\r\nimport ChatBox from '../components/ChatBox';\r\n\r\n\r\n\r\n\r\nfunction Chat() {\r\n\r\n  const [input, setInput] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const [ansatt, setAnsatt] = useState(\"\");\r\n  const [generator, setGenerator] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\nfunction clearChat() {\r\n  setChatLog([]);\r\n}\r\n\r\n// function showNavbar that turns the display of the sidemenu on and off\r\nfunction showNavbar() {\r\n  const sidemenu = document.querySelector('.sidemenu');\r\n  if (sidemenu.style.display === 'none' || sidemenu.style.display === '') {\r\n    sidemenu.style.display = 'block';\r\n  } else {\r\n    sidemenu.style.display = 'none';\r\n  }\r\n}\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let chatLogNew = [...chatLog, { user: \"me\", message: `${input}`}]\r\n    setInput('');\r\n    setChatLog(chatLogNew);\r\n    setIsLoading(true);\r\n\r\n    const messages = chatLogNew.map((message) => message.message);\r\n\r\n    const response = await fetch('http://localhost:3080', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message: messages, ansatt: `${ansatt}`, generator: `${generator}`})\r\n    });\r\n    \r\n\r\n    const data = await response.json();\r\n    await setChatLog([...chatLogNew, { user: 'gpt', message: data.message }]);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      {/* <div className='nav'><Hamburger onToggle={showNavbar} color='#fff' size={20} /></div> */}\r\n      <SideMenu ansatt={ansatt} setAnsatt={setAnsatt} generator={generator} setGenerator={setGenerator} clearChat={clearChat} />\r\n      <ChatBox chatLog={chatLog} isLoading={isLoading} handleSubmit={handleSubmit} input={input} setInput={setInput} ansatt={ansatt} generator={generator}  />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
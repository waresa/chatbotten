{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waris\\\\Desktop\\\\projects\\\\gptboss\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './normal.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  function clearChat() {\n    setChatLog([]);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, {\n      user: \"me\",\n      message: `${input}`\n    }];\n    setInput('');\n    setChatLog(chatLogNew);\n    const messages = chatLogNew.map(message => message.message);\n    const response = await fetch('http://localhost:3080', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: messages\n      })\n    });\n    const data = await response.json();\n    await setChatLog([...chatLogNew, {\n      user: 'gpt',\n      message: data.message\n    }]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidemenu-btn\",\n        onClick: clearChat,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \"Ny Samtale\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n//Q: Why does this not work? <div className={'chat-message ${message.user == \"gpt\" && \"chatgpt\"}'}>\n//A: Because it is not a template string, it is a string literal. You need to use backticks ` instead of single quotes '. Also, you need to use curly braces {} to interpolate the variable.\n//Q: give me the code\n//A: const ChatMessage = ({ message }) => { \n//   return (\n//    \n_s(App, \"v3vgqBHvcMuY+0TlXCCt3jH4+QQ=\");\n_c = App;\nconst ChatMessage = _ref => {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user == \"gpt\" && \"chatgpt\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","App","input","setInput","chatLog","setChatLog","clearChat","handleSubmit","e","preventDefault","chatLogNew","user","message","messages","map","response","fetch","method","headers","body","JSON","stringify","data","json","index","target","value","ChatMessage"],"sources":["C:/Users/waris/Desktop/projects/gptboss/client/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport './normal.css';\nimport { useState }  from 'react';\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [chatLog, setChatLog] = useState([\n\n]);\n\nfunction clearChat() {\n  setChatLog([]);\n}\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let chatLogNew = [...chatLog, { user: \"me\", message: `${input}`}]\n    setInput('');\n    setChatLog(chatLogNew);\n\n    const messages = chatLogNew.map((message) => message.message);\n\n    const response = await fetch('http://localhost:3080', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ message: messages })\n    });\n\n    const data = await response.json();\n    await setChatLog([...chatLogNew, { user: 'gpt', message: data.message }]);\n  }\n\n  return (\n    <div className=\"App\">\n      <aside className='sidemenu'>\n        <div className='sidemenu-btn' onClick={clearChat}>\n          <span>+</span>\n          Ny Samtale\n        </div>\n      </aside>\n      <section className='chatbox'>\n        <div className='chat-log'>\n          {chatLog.map((message, index) => (\n            <ChatMessage key = {index} message={message} />\n          ))}\n\n          \n        \n        </div>\n          <div className='chat-input-holder'>\n            <form onSubmit={handleSubmit}>\n              <input className='chat-input-textarea' value={input} onChange={e => setInput(e.target.value)} />\n            </form>\n\n          </div>\n      </section>\n      </div>\n  );\n}\n\n//Q: Why does this not work? <div className={'chat-message ${message.user == \"gpt\" && \"chatgpt\"}'}>\n//A: Because it is not a template string, it is a string literal. You need to use backticks ` instead of single quotes '. Also, you need to use curly braces {} to interpolate the variable.\n//Q: give me the code\n//A: const ChatMessage = ({ message }) => { \n//   return (\n//    \n\nconst ChatMessage = ({ message }) => {\n  return (\n    <div className={`chat-message ${message.user == \"gpt\" && \"chatgpt\"}`}>\n\n    <div className='chat-message-center'>\n      <div className=\"avatar\">\n\n      </div>\n      <div className='message'>{message.message}</div>\n  </div>\n</div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}